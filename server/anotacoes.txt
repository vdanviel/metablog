//salvar professor em um json..
server.post('/teacher/save', (request, response) => {

    // Validação de dados
    if (!request.body.name || !request.body.email || !request.body.password || request.body.name === "" || request.body.email === "" || request.body.password === "") {
        response.json({
            "missing_shields": {
                name: !request.body.name || request.body.name === "",
                email: !request.body.email || request.body.email === "",
                password: !request.body.password || request.body.password === ""
            }
        });
        return false;
    }

    //lendo arquivo e me mando de volta
    fs.readFile(save_path, function(err, data) {

        if (err) {
            response.status(500).send(err);
            return false;
        }

        try {
            
            const saves = JSON.parse(data);

            //formando o objeto do novo professor..
            let teacher = {
                id: uuidv4(),
                name: request.body.name,
                email: request.body.email,
                password: request.body.password,
                date_created: new Date()
            }
    
            //adicionando professor no array dos saves..
            saves.teachers.push(teacher);

            fs.writeFile(save_path, JSON.stringify(saves), function (err) {                
                if (err) {
                    response.status(500).send(err);
                    return false;
                }
            });

            response.json({"success": new Date()})

            return true;

        } catch (error) {
            
            console.error(error);
            response.status(500).send(error)
            return false;

        }

    });

    //response.json(success);

});